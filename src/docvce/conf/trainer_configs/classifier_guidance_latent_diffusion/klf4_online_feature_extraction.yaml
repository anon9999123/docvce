# @package __global__
_target_: hydra_zen.funcs.zen_processing
_zen_target: atria.core.task_runners._atria_trainer.AtriaTrainer
_zen_exclude:
- hydra
- test_run
- experiment_name
- image_size
- dir_name_filter
- objective
- noise_schedule
- snr_gamma
- train_batch_size
- eval_batch_size
- gray_to_rgb
- backend
- n_devices
- pretrained_checkpoint_path
- vae_checkpoint_path
- vae_state_dict_path
defaults:
- classifier_guidance_latent_diffusion/train_base@_here_
- override /data_module@data_module: ${oc.env:TASK}/${oc.env:DATASET}_override_custom
- _self_

data_module:
  max_val_samples: 5000 # this is for FID

task_module:
  # this is the main difference, setting this to false allows vae to compute encodings on the go
  # very expensive for training but good for sampling
  use_precomputed_latents_if_available: False

output_dir: ./output
seed: 42
deterministic: false
backend: nccl
n_devices: 1
do_train: true
do_validation: true
do_visualization: true
do_test: true

# additional override params that are should go inside _zen_exclude
test_run: false
experiment_name: classifier_guidance_klf4
image_size: 256
objective: epsilon # one of epsilon, sample, v_prediction
noise_schedule: linear
snr_gamma: null
gray_to_rgb: true
train_batch_size: 32
eval_batch_size: 64

hydra:
  run:
    dir: "${output_dir}/atria_trainer/\
          ${resolve_dir_name:${data_module.dataset_name}}/\
          ${experiment_name}"
  output_subdir: hydra
  job:
    chdir: false